{"version":3,"file":"auth-Cw4JLggD.js","names":[],"sources":["../src/schema/auth.ts"],"sourcesContent":["import { pgTable, text, timestamp, boolean } from \"drizzle-orm/pg-core\";\n\n// Better Auth Schema\nexport const user = pgTable(\"user\", {\n  id: text(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  emailVerified: boolean(\"emailVerified\").notNull().default(false),\n  image: text(\"image\"),\n  role: text(\"role\")\n    .notNull()\n    .default(\"RECEPCAO\")\n    .$type<\"ADMIN\" | \"COORDENACAO\" | \"RECEPCAO\">(),\n  createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updatedAt\").notNull().defaultNow(),\n});\n\nexport const session = pgTable(\"session\", {\n  id: text(\"id\").primaryKey(),\n  expiresAt: timestamp(\"expiresAt\").notNull(),\n  token: text(\"token\").notNull().unique(),\n  createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updatedAt\").notNull().defaultNow(),\n  ipAddress: text(\"ipAddress\"),\n  userAgent: text(\"userAgent\"),\n  userId: text(\"userId\")\n    .notNull()\n    .references(() => user.id, { onDelete: \"cascade\" }),\n});\n\nexport const account = pgTable(\"account\", {\n  id: text(\"id\").primaryKey(),\n  accountId: text(\"accountId\").notNull(),\n  providerId: text(\"providerId\").notNull(),\n  userId: text(\"userId\")\n    .notNull()\n    .references(() => user.id, { onDelete: \"cascade\" }),\n  accessToken: text(\"accessToken\"),\n  refreshToken: text(\"refreshToken\"),\n  idToken: text(\"idToken\"),\n  accessTokenExpiresAt: timestamp(\"accessTokenExpiresAt\"),\n  refreshTokenExpiresAt: timestamp(\"refreshTokenExpiresAt\"),\n  scope: text(\"scope\"),\n  password: text(\"password\"),\n  createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updatedAt\").notNull().defaultNow(),\n});\n\nexport const verification = pgTable(\"verification\", {\n  id: text(\"id\").primaryKey(),\n  identifier: text(\"identifier\").notNull(),\n  value: text(\"value\").notNull(),\n  expiresAt: timestamp(\"expiresAt\").notNull(),\n  createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updatedAt\").notNull().defaultNow(),\n});\n"],"mappings":";;;AAGA,MAAa,OAAO,QAAQ,QAAQ;CAClC,IAAI,KAAK,KAAK,CAAC,YAAY;CAC3B,MAAM,KAAK,OAAO,CAAC,SAAS;CAC5B,OAAO,KAAK,QAAQ,CAAC,SAAS,CAAC,QAAQ;CACvC,eAAe,QAAQ,gBAAgB,CAAC,SAAS,CAAC,QAAQ,MAAM;CAChE,OAAO,KAAK,QAAQ;CACpB,MAAM,KAAK,OAAO,CACf,SAAS,CACT,QAAQ,WAAW,CACnB,OAA6C;CAChD,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACxD,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACzD,CAAC;AAEF,MAAa,UAAU,QAAQ,WAAW;CACxC,IAAI,KAAK,KAAK,CAAC,YAAY;CAC3B,WAAW,UAAU,YAAY,CAAC,SAAS;CAC3C,OAAO,KAAK,QAAQ,CAAC,SAAS,CAAC,QAAQ;CACvC,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACxD,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACxD,WAAW,KAAK,YAAY;CAC5B,WAAW,KAAK,YAAY;CAC5B,QAAQ,KAAK,SAAS,CACnB,SAAS,CACT,iBAAiB,KAAK,IAAI,EAAE,UAAU,WAAW,CAAC;CACtD,CAAC;AAEF,MAAa,UAAU,QAAQ,WAAW;CACxC,IAAI,KAAK,KAAK,CAAC,YAAY;CAC3B,WAAW,KAAK,YAAY,CAAC,SAAS;CACtC,YAAY,KAAK,aAAa,CAAC,SAAS;CACxC,QAAQ,KAAK,SAAS,CACnB,SAAS,CACT,iBAAiB,KAAK,IAAI,EAAE,UAAU,WAAW,CAAC;CACrD,aAAa,KAAK,cAAc;CAChC,cAAc,KAAK,eAAe;CAClC,SAAS,KAAK,UAAU;CACxB,sBAAsB,UAAU,uBAAuB;CACvD,uBAAuB,UAAU,wBAAwB;CACzD,OAAO,KAAK,QAAQ;CACpB,UAAU,KAAK,WAAW;CAC1B,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACxD,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACzD,CAAC;AAEF,MAAa,eAAe,QAAQ,gBAAgB;CAClD,IAAI,KAAK,KAAK,CAAC,YAAY;CAC3B,YAAY,KAAK,aAAa,CAAC,SAAS;CACxC,OAAO,KAAK,QAAQ,CAAC,SAAS;CAC9B,WAAW,UAAU,YAAY,CAAC,SAAS;CAC3C,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACxD,WAAW,UAAU,YAAY,CAAC,SAAS,CAAC,YAAY;CACzD,CAAC"}